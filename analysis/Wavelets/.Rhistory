detrend = FALSE
sampling = 120
low_freq_band = 4
upper_freq_band = 32
for (pid in part_ids) {
w <- high_data |>
filter(Trial_type == "experiment", PART_ID == pid) |>
group_by(CSI) |>
summarise(mean = mean(Corr)) |>
analyze.wavelet(
"mean",
loess.span = detrend,
dt = 1 / sampling,
lowerPeriod = 1 / upper_freq_band,
upperPeriod = 1 / low_freq_band,
make.pval = TRUE,
n.sim = 10
)
wt.image(
w,
color.key = "quantile",
main = pid,
n.levels = 100,
spec.time.axis = list(labels = seq(400, 900, by=8.3333)),
legend.params = list(lab = "wavelet power levels", mar = 4.7)
)
}
part_ids <- high_data |> select(PART_ID) |> unique()
part_ids <- part_ids$PART_ID
# params
detrend = FALSE
sampling = 120
low_freq_band = 4
upper_freq_band = 32
for (pid in part_ids) {
w <- high_data |>
filter(Trial_type == "experiment", PART_ID == pid) |>
group_by(CSI) |>
summarise(mean = mean(Corr)) |>
analyze.wavelet(
"mean",
loess.span = detrend,
dt = 1 / sampling,
lowerPeriod = 1 / upper_freq_band,
upperPeriod = 1 / low_freq_band,
make.pval = TRUE,
n.sim = 10
)
wt.image(
w,
color.key = "quantile",
main = pid,
n.levels = 100,
spec.time.axis = list(at = seq(10, 60, by = 10), labels = seq(400, 900, by=8.3333)),
legend.params = list(lab = "wavelet power levels", mar = 4.7)
)
}
seq(10, 60, by = 10)
library(tidyverse)
library(wavelets)
install.packages("wavelets")
library(tidyverse)
library(wavelets)
high_data |>
filter(Trial_type == "experiment", PART_ID == pid) |>
group_by(CSI) |>
summarise(mean = mean(Corr)) |>
dwt()
X <- high_data |>
filter(Trial_type == "experiment", PART_ID == pid) |>
group_by(CSI) |>
summarise(mean = mean(Corr))
dwt(X)
X <- high_data |>
filter(Trial_type == "experiment", PART_ID == pid) |>
group_by(CSI) |>
summarise(mean = mean(Corr))
X <- as.data.frame(X)
dwt(X)
X <- high_data |>
filter(Trial_type == "experiment", PART_ID == pid) |>
group_by(CSI) |>
summarise(mean = mean(Corr))
class(x)
class(X)
as.data.frame(X)
X <- high_data |>
filter(Trial_type == "experiment", PART_ID == pid) |>
group_by(CSI) |>
summarise(mean = mean(Corr))
X <- as.data.frame(X)
dwt(X)
X
dwt(X$mean)
dwt(X$mean)
X <- high_data |>
filter(Trial_type == "experiment", PART_ID == pid) |>
group_by(CSI) |>
summarise(mean = mean(Corr))
X <- as.data.frame(X)
w <- dwt(X$mean)
X <- high_data |>
filter(Trial_type == "experiment", PART_ID == pid) |>
group_by(CSI) |>
summarise(mean = mean(Corr))
X <- as.data.frame(X)
x <- dwt(X$mean)
plot(x, levels = NULL, draw.boundary = FALSE, type = "stack",
col.plot = "black", col.boundary = "red", X.xtick.at = NULL, X.ytick.at
= NULL, Stack.xtick.at = NULL, Stack.ytick.at = NULL, X.xlab = "t",
y.rlabs = TRUE, plot.X = TRUE, plot.W = TRUE, plot.V = TRUE, ...)
plot(x, levels = NULL, draw.boundary = FALSE, type = "stack",
col.plot = "black", col.boundary = "red", X.xtick.at = NULL, X.ytick.at
= NULL, Stack.xtick.at = NULL, Stack.ytick.at = NULL, X.xlab = "t",
y.rlabs = TRUE, plot.X = TRUE, plot.W = TRUE, plot.V = TRUE)
plot(x)
plot.dwt(x)
plot(x)
part_ids <- high_data |> select(PART_ID) |> unique()
part_ids <- part_ids$PART_ID
# params
detrend = FALSE
sampling = 120
low_freq_band = 4
upper_freq_band = 32
for (pid in part_ids) {
w <- high_data |>
filter(Trial_type == "experiment", PART_ID == pid) |>
group_by(CSI) |>
summarise(mean = mean(Corr)) |>
analyze.wavelet(
"mean",
loess.span = detrend,
dt = 1 / sampling,
lowerPeriod = 1 / upper_freq_band,
upperPeriod = 1 / low_freq_band,
make.pval = TRUE,
n.sim = 10
)
wt.image(
w,
color.key = "quantile",
main = pid,
n.levels = 100,
spec.time.axis = list(at = seq(10, 60, by = 10), labels = seq(400, 900, by=8.3333)),
legend.params = list(lab = "wavelet power levels", mar = 4.7)
)
}
part_ids <- high_data |> select(PART_ID) |> unique()
part_ids <- part_ids$PART_ID
# params
detrend = FALSE
sampling = 120
low_freq_band = 4
upper_freq_band = 32
for (pid in part_ids) {
w <- high_data |>
filter(Trial_type == "experiment", PART_ID == pid) |>
group_by(CSI) |>
summarise(mean = mean(Corr)) |>
analyze.wavelet(
"mean",
loess.span = detrend,
dt = 1 / sampling,
lowerPeriod = 1 / upper_freq_band,
upperPeriod = 1 / low_freq_band,
make.pval = TRUE,
n.sim = 10
)
wt.image(
w,
color.key = "quantile",
main = pid,
n.levels = 100,
spec.time.axis = list(
at = seq(10, 60, by = 10),
labels = seq(400, 900, by = 8.3333)
),
legend.params = list(lab = "wavelet power levels", mar = 4.7)
)
reconstruct(
w,
plot.waves = TRUE,
lwd = c(1, 2),
legend.coords = "bottomleft",
main = pid
)
}
library(tidyverse)
library(WaweletComp)
library(tidyverse)
library(WaveletComp)
part_ids <- high_data |> select(PART_ID) |> unique()
part_ids <- part_ids$PART_ID
# params
detrend = FALSE
sampling = 60
low_freq_band = 4
upper_freq_band = 32
for (pid in part_ids) {
w <- high_data |>
filter(Trial_type == "experiment", PART_ID == pid) |>
group_by(CSI) |>
summarise(mean = mean(Corr)) |>
analyze.wavelet(
"mean",
loess.span = detrend,
dt = 1 / sampling,
lowerPeriod = 1 / upper_freq_band,
upperPeriod = 1 / low_freq_band,
make.pval = TRUE,
n.sim = 10
)
wt.image(
w,
color.key = "quantile",
main = pid,
n.levels = 100,
spec.time.axis = list(
at = seq(10, 60, by = 10),
labels = seq(400, 900, by = 8.3333)
),
legend.params = list(lab = "wavelet power levels", mar = 4.7)
)
reconstruct(
w,
plot.waves = TRUE,
lwd = c(1, 2),
legend.coords = "bottomleft",
main = pid
)
}
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
ggplot2::theme_set(ggplot2::theme_minimal())
library(tidyverse)
library(WaveletComp)
# load data
low_data_dir <- "../../data/low_resolution"
high_data_dir <- "../../data/high_resolution"
low_files <- dir(low_data_dir, patter = "*.csv$")
high_files <- dir(high_data_dir, patter = "*.csv$")
low_data <- low_files %>%
map(~ read_csv(file.path(low_data_dir, .), show_col_types = F)) %>%
reduce(rbind)
high_data <- high_files %>%
map(~ read_csv(file.path(high_data_dir, .), show_col_types = F)) |>
reduce(rbind)
# high res data gathered in 4 sessions encoded PARTID + S1-S4. S1-S4 removed
high_data <- high_data |>
mutate(PART_ID = str_sub(PART_ID, 1, nchar(PART_ID)-2))
high_data %>%
group_by(PART_ID, CSI) %>%
summarise(mean = mean(Corr)) %>%
ggplot(mapping = aes(x = CSI, y = mean)) +
geom_line() +
facet_wrap(~PART_ID)
part_ids <- high_data |> select(PART_ID) |> unique()
part_ids <- part_ids$PART_ID
# params
detrend = FALSE
sampling = 60
low_freq_band = 4
upper_freq_band = 32
for (pid in part_ids) {
w <- high_data |>
filter(Trial_type == "experiment", PART_ID == pid) |>
group_by(CSI) |>
summarise(mean = mean(Corr)) |>
analyze.wavelet(
"mean",
loess.span = detrend,
dt = 1 / sampling,
lowerPeriod = 1 / upper_freq_band,
upperPeriod = 1 / low_freq_band,
make.pval = TRUE,
n.sim = 10
)
wt.image(
w,
color.key = "quantile",
main = pid,
n.levels = 100,
spec.time.axis = list(
at = seq(10, 60, by = 10),
labels = seq(400, 900, by = 8.3333)
),
legend.params = list(lab = "wavelet power levels", mar = 4.7)
)
reconstruct(
w,
plot.waves = TRUE,
lwd = c(1, 2),
legend.coords = "bottomleft",
main = pid
)
}
part_ids <- high_data |> select(PART_ID) |> unique()
part_ids <- part_ids$PART_ID
# params
detrend = FALSE
sampling = 120
low_freq_band = 4
upper_freq_band = 32
for (pid in part_ids) {
w <- high_data |>
filter(Trial_type == "experiment", PART_ID == pid) |>
group_by(CSI) |>
summarise(mean = mean(Corr)) |>
analyze.wavelet(
"mean",
loess.span = detrend,
dt = 1 / sampling,
lowerPeriod = 1 / upper_freq_band,
upperPeriod = 1 / low_freq_band,
make.pval = TRUE,
n.sim = 10
)
wt.image(
w,
color.key = "quantile",
main = pid,
n.levels = 100,
legend.params = list(lab = "wavelet power levels", mar = 4.7)
)
reconstruct(
w,
plot.waves = TRUE,
lwd = c(1, 2),
legend.coords = "bottomleft",
main = pid
)
}
part_ids <- high_data |> select(PART_ID) |> unique()
part_ids <- part_ids$PART_ID
# params
detrend = FALSE
sampling = 60
low_freq_band = 4
upper_freq_band = 32
for (pid in part_ids) {
w <- high_data |>
filter(Trial_type == "experiment", PART_ID == pid) |>
group_by(CSI) |>
summarise(mean = mean(Corr)) |>
analyze.wavelet(
"mean",
loess.span = detrend,
dt = 1 / sampling,
lowerPeriod = 1 / upper_freq_band,
upperPeriod = 1 / low_freq_band,
make.pval = TRUE,
n.sim = 10
)
wt.image(
w,
color.key = "quantile",
main = pid,
n.levels = 100,
legend.params = list(lab = "wavelet power levels", mar = 4.7)
)
reconstruct(
w,
plot.waves = TRUE,
lwd = c(1, 2),
legend.coords = "bottomleft",
main = pid
)
}
part_ids <- high_data |> select(PART_ID) |> unique()
part_ids <- part_ids$PART_ID
# params
detrend = FALSE
sampling = 120
low_freq_band = 4
upper_freq_band = 32
for (pid in part_ids) {
w <- high_data |>
filter(Trial_type == "experiment", PART_ID == pid) |>
group_by(CSI) |>
summarise(mean = mean(Corr)) |>
analyze.wavelet(
"mean",
loess.span = detrend,
dt = 1 / sampling,
lowerPeriod = 1 / upper_freq_band,
upperPeriod = 1 / low_freq_band,
make.pval = TRUE,
n.sim = 10
)
wt.image(
w,
color.key = "quantile",
main = pid,
n.levels = 100,
legend.params = list(lab = "wavelet power levels", mar = 4.7)
)
reconstruct(
w,
plot.waves = TRUE,
lwd = c(1, 2),
legend.coords = "bottomleft",
main = pid
)
}
part_ids <- high_data |> select(PART_ID) |> unique()
part_ids <- part_ids$PART_ID
# params
detrend = FALSE
sampling = 120
low_freq_band = 4
upper_freq_band = 32
for (pid in part_ids) {
w <- high_data |>
filter(Trial_type == "experiment", PART_ID == pid) |>
group_by(CSI) |>
summarise(mean = mean(Corr)) |>
analyze.wavelet(
"mean",
loess.span = detrend,
dt = 1 / sampling,
main = str_c("Spectra: ", pid)
lowerPeriod = 1 / upper_freq_band,
part_ids <- high_data |> select(PART_ID) |> unique()
part_ids <- part_ids$PART_ID
# params
detrend = FALSE
sampling = 120
low_freq_band = 4
upper_freq_band = 32
for (pid in part_ids) {
w <- high_data |>
filter(Trial_type == "experiment", PART_ID == pid) |>
group_by(CSI) |>
summarise(mean = mean(Corr)) |>
analyze.wavelet(
"mean",
loess.span = detrend,
dt = 1 / sampling,
main = str_c(c("Spectra: ", pid))
lowerPeriod = 1 / upper_freq_band,
part_ids <- high_data |> select(PART_ID) |> unique()
part_ids <- part_ids$PART_ID
# params
detrend = FALSE
sampling = 120
low_freq_band = 4
upper_freq_band = 32
for (pid in part_ids) {
w <- high_data |>
filter(Trial_type == "experiment", PART_ID == pid) |>
group_by(CSI) |>
summarise(mean = mean(Corr)) |>
analyze.wavelet(
"mean",
loess.span = detrend,
dt = 1 / sampling,
lowerPeriod = 1 / upper_freq_band,
upperPeriod = 1 / low_freq_band,
make.pval = TRUE,
n.sim = 10
)
wt.image(
w,
color.key = "quantile",
main = str_c("Wavelets: ", pid),
n.levels = 100,
legend.params = list(lab = "wavelet power levels", mar = 4.7)
)
reconstruct(
w,
plot.waves = TRUE,
lwd = c(1, 2),
legend.coords = "bottomleft",
main = str_c("Reconstruct: ", pid)
)
}
part_ids <- high_data |> select(PART_ID) |> unique()
part_ids <- part_ids$PART_ID
# params
detrend = FALSE
sampling = 120
low_freq_band = 4
upper_freq_band = 32
for (pid in part_ids) {
w <- high_data |>
filter(Trial_type == "experiment", PART_ID == pid) |>
group_by(CSI) |>
summarise(mean = mean(Corr)) |>
analyze.wavelet(
"mean",
loess.span = detrend,
dt = 1 / sampling,
lowerPeriod = 1 / upper_freq_band,
upperPeriod = 1 / low_freq_band,
make.pval = TRUE,
n.sim = 10
)
wt.image(
w,
color.key = "quantile",
main = pid,
n.levels = 100,
legend.params = list(lab = "wavelet power levels", mar = 4.7)
)
reconstruct(
w,
plot.waves = TRUE,
lwd = c(1, 2),
legend.coords = "bottomleft",
main = pid
)
}
